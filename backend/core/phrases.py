from db.data import db_dict, filter_data
from calculations import calculate_get


def display_summary(data, username=None, phrase=''):
    msg = f'–î–µ—Ç–∞–ª–∏ —Å–¥–µ–ª–∫–∏: \n'
    msg += f"–°—Ç—Ä–∞–Ω–∞: <b>{data.get('country', '')}</b>\n"
    msg += f"–ì–æ—Ä–æ–¥: <b>{data.get('city', '')}</b>\n"

    currency_to_sell = data.get('currency_to_sell', '')
    currency_to_buy = data.get('currency_to_buy', '')
    operation_type = data.get('operation_type')
    price = data.get('price')

    msg += f"‚è© –ü—Ä–æ–¥–∞—Ç—å: <b>{data.get('amount', '')} {currency_to_sell}</b>\n"

    if price:
        amount = data.get('amount')
        if amount:
            if data.get('country') == '–¢—É—Ä—Ü–∏—è' and currency_to_sell == 'USDT':
                if float(amount) / 0.95238 < 5000:
                    price = 100 / 105  # 0.95238
                else:
                    price = 100 / 104  # 0.96154
            total_get = calculate_get(float(amount), float(price), operation_type)
            if currency_to_buy in ['BTC', 'ETH'] or currency_to_sell in ['BTC', 'ETH']:
                msg += f"‚è™ –ü–æ–ª—É—á–∏—Ç—å: <b>{total_get:.8f} {currency_to_buy}</b>\n"
            else:
                msg += f"‚è™ –ü–æ–ª—É—á–∏—Ç—å: <b>{total_get:.2f} {currency_to_buy}</b>\n"
        if operation_type == 'SELL':
            msg += f"üí± –ö—É—Ä—Å: <b>1 {currency_to_sell} = {price:.2f} {currency_to_buy}</b>\n"
        elif operation_type == 'BUY':
            msg += f"üí± –ö—É—Ä—Å: <b>1 {currency_to_buy} = {price:.2f} {currency_to_sell}</b>\n"
    else:
        msg += f"‚è™ –ü–æ–ª—É—á–∏—Ç—å: <b>{currency_to_buy}</b>\n"

    msg += f"–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: <b>{data.get('date', '')} {data.get('time', '')}</b>\n"
    if username:
        msg += f"–ó–∞–∫–∞–∑—á–∏–∫: @{username}\n"
    return msg + '\n' + phrase


def card_summary(data, username=None, phrase=''):
    msg = f'–î–µ—Ç–∞–ª–∏ —Å–¥–µ–ª–∫–∏: \n'

    currency_to_sell = data.get('currency_to_sell', '')
    currency_to_buy = data.get('currency_to_buy', '')
    operation_type = data.get('operation_type')
    msg += f"‚è© –ü—Ä–æ–¥–∞—Ç—å: <b>{data.get('amount', '')} {currency_to_sell}</b>\n"
    price = data.get('price')
    if price:
        amount = data.get('amount')
        if amount:
            total_get = calculate_get(float(amount), float(price), operation_type)
            msg += f"‚è™ –ü–æ–ª—É—á–∏—Ç—å: <b>{total_get:.4f} {currency_to_buy}</b>\n"
        if operation_type == 'SELL':
            msg += f"üí± –ö—É—Ä—Å: <b>1 {currency_to_sell} = {price:.4f} {currency_to_buy}</b>\n"
        elif operation_type == 'BUY':
            msg += f"üí± –ö—É—Ä—Å: <b>1 {currency_to_buy} = {price:.4f} {currency_to_sell}</b>\n"
    else:
        msg += f"‚è™ –ü–æ–ª—É—á–∏—Ç—å: <b>{currency_to_buy}</b>\n"

    if username:
        msg += f"–ó–∞–∫–∞–∑—á–∏–∫: @{username}\n"
    return msg + '\n' + phrase


# def display_summary(data, ask=False, username=None, phrase=''):
#     msg = f'–î–µ—Ç–∞–ª–∏ —Å–¥–µ–ª–∫–∏: \n'
#
#     country = data.get('country', '')
#     currency_to_sell = data.get('currency_to_sell', '')
#     amount = data.get('amount', '')
#
#     msg += f"–°—Ç—Ä–∞–Ω–∞: <b>{country}</b>\n"
#     msg += f"–ì–æ—Ä–æ–¥: <b>{data.get('city', '')}</b>\n"
#     msg += f"‚è© –ü—Ä–æ–¥–∞—Ç—å: <b>{amount} {currency_to_sell}</b>\n"
#
#     price = data.get('price')
#     operation_type = data.get('operation_type', '')
#     currency_to_buy = data.get('currency_to_buy', '')
#     if price:
#         fee = filter_data(action='fee', country=country)
#         if amount:
#             total_get = calculate_total_get(float(amount), float(price), float(fee), operation_type)
#             msg += f"‚è™ –ü–æ–ª—É—á–∏—Ç—å: <b>{total_get:.6f} {currency_to_buy}</b>\n"
#
#         if operation_type == 'SELL':
#             price = float(price) - float(price) * float(fee)
#             msg += f"üí± –ö—É—Ä—Å: <b>1 {currency_to_sell} = {price:.6f} {currency_to_buy}</b>\n"
#         elif operation_type == 'BUY':
#             price = float(price) + float(price) * fee
#             msg += f"üí± –ö—É—Ä—Å: <b>1 {currency_to_buy} = {float(price):.6f} {currency_to_sell}</b>\n"
#     else:
#         msg += f"‚è™ –ü–æ–ª—É—á–∏—Ç—å: <b>{currency_to_buy}</b>\n"
#
#     msg += f"–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: <b>{data.get('date', '')} {data.get('time', '')}</b>\n"
#     if username:
#         msg += f"–ó–∞–∫–∞–∑—á–∏–∫: @{username}\n"
#         # exception danger float()
#         fee = filter_data(action='fee', country=country)
#         income = calculate_income(float(amount), float(price), float(fee), operation_type)
#         msg += f"–ö–æ–º–∏—Å—Å–∏—è: <b>{float(fee * 100):.2f}%</b>\n"
#         msg += f"–î–æ—Ö–æ–¥: <b>{float(income):.3f} {currency_to_buy}</b>\n"
#
#     msg += '\n'
#     if ask:
#         msg += f'<b>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å?</b> \n'
#
#     return msg + phrase


def add_emoji(name, action):
    if 'country' in action:
        return phrases.emoji.get(name, '') + " " + name
    if 'currency' in action:
        return phrases.emoji.get(name, '') + " " + name
    return name


class Phrases:
    welcome = (
        '- –ú–µ–Ω—é -\n'
    )

    help = (
        f'<b>–ë–æ—Ç-–∫—Ä–∏–ø—Ç–æ–æ–±–º–µ–Ω–Ω–∏–∫</b>\n\n'
        f'- –í—ã –º–æ–∂–µ—Ç–µ <b>—Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å–¥–µ–ª–∫—É</b>.\n'
        f'–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –∞ –¥–∞–ª—å—à–µ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –æ–ø–µ—Ä–∞—Ç–æ—Ä.\n\n'
        f'- –ù–∞–∂–º–∏—Ç–µ <b>–ö—É—Ä—Å –æ–±–º–µ–Ω–∞</b>, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.\n'
        f'–ö—É—Ä—Å –∏ –∫–æ–º–º–∏—Å–∏—è –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Å—Ç—Ä–∞–Ω—ã –∏ –æ–±—ä—ë–º–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.'
    )
    rates_info = (
        '- <b>–ö—É—Ä—Å –æ–±–º–µ–Ω–∞</b> -\n'
        '\n'
        f'<b>üåê BTC = 43‚Äô500, 00$ üîª4, 10 %</b>\n'
        f'<b>üí† ETH = 3‚Äô230, 00$ üîª3, 78 %</b>\n'
        '\n'
        f'<b>üíµ USDT > $ (cash)</b>\n'
        # escape '<' -> &lt; '>' -> &gt
        f'104, 50 USDT = 100$ &lt 5000$ (4, 5 %)\n'
        f'104, 00 USDT = 100$ &gt 5000$ (4 %)\n'
        '\n'
        '\n<b>üí∂ USDT &gt‚Ç¨ (cash)</b>\n'
        '116, 00 USDT = 100‚Ç¨ &lt 5000‚Ç¨ (5 %)\n'
        '114, 00 USDT = 100‚Ç¨ &gt 5000‚Ç¨ (4 %)'
        '\n'
        '\n<b>üí≥ ‚ÇΩ &gt $ (cash)üî∫üî∫üî∫</b>\n'
        '10‚Äô153, 00 ‚ÇΩ (Russian card &gt Sber / Tinkoff) &gt 100$\n'
        '11‚Äô168, 00 ‚ÇΩ (Russian card &gt Sber / Tinkoff) &gt 100‚Ç¨\n'
    )

    ask = '<b>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å?</b>\n'
    pick_country = 'üåè <b>–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É</b>:'
    other_country = f'–í—ã–±—Ä–∞–Ω–Ω–∞—è —Å—Ç—Ä–∞–Ω–∞ –ø–æ–∫–∞ –Ω–µ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–∞. –î–∞–ª—å—à–µ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –æ–ø–µ—Ä–∞—Ç–æ—Ä.\n<b>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å?</b>\n'
    pick_city = f'üèô <b>–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥</b>:'
    # err_input = f'–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑'
    pick_currency_to_sell = f'‚è© –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ <b>–ø—Ä–æ–¥–∞—Ç—å</b>:'
    pick_currency_to_buy = f'‚è™ –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ <b>–∫—É–ø–∏—Ç—å</b>:'
    pick_date = f'üìÜ <b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É</b>:'
    pick_time = f'üïì <b>–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è</b>:'
    pick_amount = f'üîΩ –ù–∞–ø–∏—à–∏—Ç–µ <b>—Å—É–º–º—É</b>, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–∞—Ç—å:Ô∏è'
    err_amount = f'–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥! –í–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ. \n<b>–°—É–º–º–∞</b>, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–∞—Ç—å:'
    emoji = {'–¢—É—Ä—Ü–∏—è': 'üáπüá∑',
             '–†–æ—Å—Å–∏—è': 'üá∑üá∫',
             '–ì—Ä—É–∑–∏—è': 'üá¨üá™',
             '–ê—Ä–º–µ–Ω–∏—è': 'üá¶üá≤',
             '–ö–∏–ø—Ä': 'üá®üáæ',
             '–û–ê–≠': 'üá¶üá™',
             '–ò—Å–ø–∞–Ω–∏—è': 'üá™üá∏',
             '–ò–Ω–¥–∏—è': 'üáÆüá≥',
             '–ß–µ—Ä–Ω–æ–≥–æ—Ä–∏—è': 'üá≤üá™',
             '–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω': 'üá∞üáø',
             '–ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω': 'üá∞üá¨',
             'BTC': 'üí†',
             'USDT': 'üí†',
             'ETH': 'üí†',
             'USD': 'üí≤',
             'RUB': 'üí≤',
             'TRY': 'üí≤',
             }
    under_construction = 'üöß under construction üöß'
    back = '‚¨Ö –Ω–∞–∑–∞–¥'
    cancel = 'üö´ –æ—Ç–º–µ–Ω–∞'
    yes = '‚úîÔ∏è –î–∞'
    exchange_cash = 'üí∂ –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –Ω–∞–ª–∏—á–Ω—ã–º–∏'
    card = 'üí≥ –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –∫–∞—Ä—Ç–∞–º–∏'
    exchange_rates = 'üí± –ö—É—Ä—Å –æ–±–º–µ–Ω–∞'
    success = '–°–¥–µ–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞!\n–° –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –æ–ø–µ—Ä–∞—Ç–æ—Ä.'

    # "‚úîÔ∏è‚úÖ –î–∞", callback_data = vote_cb.new("no", action='conf')))


phrases = Phrases()
